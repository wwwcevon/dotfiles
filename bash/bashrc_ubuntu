# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# don't put duplicate lines in the history. See bash(1) for more options
# ... or force ignoredups and ignorespace
HISTCONTROL=ignoredups:ignorespace

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# path
export PATH="$HOME/bin:$PATH"

# alias
alias ipy="env ipython"
alias svn="env colorsvn"
alias ll='ls -lAFhG --color=auto'
alias grep='grep --color'
alias l='ls --color=auto'
alias ssh='ssh -A'
alias tmux='/usr/bin/env tmux -2'
alias z="zile"

export EDITOR=vim

export HISTSIZE="10000000"

export LC_ALL="en_US.UTF-8"
export LANG="en_US.UTF-8"

# normal PS1
export PS1="\u@\h \W \$ "

# if [ -f $HOME/.ssh/id_rsa ]; then
#     /usr/local/bin/keychain -q $HOME/.ssh/id_rsa
#     /usr/local/bin/keychain -q $HOME/.ssh/github/id_rsa
#     /usr/local/bin/keychain -q $HOME/.ssh/gitcafe/id_rsa
#     /usr/local/bin/keychain -q $HOME/.ssh/anjuke/id_rsa
#     . $HOME/.keychain/$HOSTNAME-sh
# fi

# Load RVM function
[[ -s "$HOME/.rvm/scripts/rvm" ]] && . "$HOME/.rvm/scripts/rvm" # && export PATH="$HOME/.rvm/bin:$PATH"

# perlbrew
[[ -s "$HOME/perl5/perlbrew/etc/bashrc" ]] && source "$HOME/perl5/perlbrew/etc/bashrc"

# check for pythonbrew
[[ -s $HOME/.pythonbrew/etc/bashrc ]] && source $HOME/.pythonbrew/etc/bashrc

# check for phpbrew
[[ -e $HOME/.phpbrew/scripts/phpbrew ]] && source $HOME/.phpbrew/scripts/phpbrew

[ -f $HOME/.bash_functions ] && . $HOME/.bash_functions

if [ $(function_exists __git_ps1) == 'function' ]; then
  PS1='\[\e[1;32m\]Î»\[\e[m\] ' # host
  PS1=$PS1'\[\e[1;34m\]\W\[\e[m\] ' # wd
  PS1=$PS1'\[\e[1;33m\]$(__ruby_version)\[\e[m\]' # rvm version
  PS1=$PS1'\[\e[1;32m\]$(__parse_git)\[\e[m\]' # git
  export PS1
fi
