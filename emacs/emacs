;; -*- mode: lisp; -*-
(load "~/.emacs.before" 'noerror)
(add-to-list 'custom-theme-load-path "~/.emacs.d/themes/")
(add-to-list 'load-path "~/.emacs.d/modes/")

(if (null window-system) (load-theme 'cyberpunk t))
(if (window-system) (load-theme 'monokai t))
;; load markdown-mode
(autoload 'markdown-mode' "markdown-mode.el"
  "Major mode for editing Markdown files" t)

;; load yaml-mode
(require 'yaml-mode)
(add-to-list 'auto-mode-alist '("\\.yml$" . yaml-mode))
(add-to-list 'auto-mode-alist '("\\.yaml$" . yaml-mode))
(add-hook 'yaml-mode-hook
          '(lambda ()
             (define-key yaml-mode-map "\C-m" 'newline-and-indent)))


;; (global-linum-mode)
(global-font-lock-mode 1)
;; disable backup
(setq backup-inhibited t)
;; disable auto save
(setq auto-save-default nil)
(setq-default indent-tabs-mode nil)
(column-number-mode 1)
;; disable startup screen
(setq inhibit-startup-message t)
(setq enable-local-variables :all)

;; disable menu bar
(menu-bar-mode -99)

;; diable tool bar
(if (window-system)
    (tool-bar-mode -1))

;; scss mode
;; (setq exec-path (cons (expand-file-name "~/.rvm/bin") exec-path))
;; (add-to-list 'load-path (expand-file-name "~/.emacs.d/modes/scss-mode.el"))
;; (autoload 'scss-mode "scss-mode")
;; (add-to-list 'auto-mode-alist '("\\.scss\\'" . scss-mode))
(add-to-list 'auto-mode-alist '("Gemfile\\'" . ruby-mode))
(add-to-list 'auto-mode-alist '("Gemfile\\.lock\\'" . ruby-mode))

(add-hook 'before-save-hook 'delete-trailing-whitespace)

(custom-set-variables
 '(auto-save-default nil)
 '(c-basic-offset 2)
 '(js-indent-level 2))

(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:weight bold :height 90 :width normal
                        :foundry "bitstream" :family "Menlo"))))
 )

(global-set-key "\C-l" 'goto-line)
(server-start)
(add-to-list 'load-path "~/.emacs.after")
(load "~/.emacs.after" 'noerror)
